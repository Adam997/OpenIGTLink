PROJECT(OpenIGTLinkTesting)

CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/igtlTestConfig.h.in ${PROJECT_BINARY_DIR}/igtlTestConfig.h)
include_directories(${PROJECT_BINARY_DIR})

IF(USE_GTEST)
  IF(${CMAKE_GENERATOR} MATCHES "Visual Studio 11" ) # VS2012 doesn't support correctly the tuples yet
    ADD_DEFINITIONS("-D_VARIADIC_MAX=10")
  ENDIF()
  SET(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
  # Prevent GoogleTest from overriding our compiler/linker options
  # when building with Visual Studio
  INCLUDE(${OpenIGTLink_SOURCE_DIR}/Testing/External_googletest.cmake)
  include_directories("${CMAKE_BINARY_DIR}/Deps/gtest/include")
  include_directories("${CMAKE_BINARY_DIR}/Deps/gmock/include")
  LINK_DIRECTORIES("${CMAKE_BINARY_DIR}/Deps/gtest-bin")
  LINK_DIRECTORIES("${CMAKE_BINARY_DIR}/Deps/gmock-bin")
ENDIF()

ADD_SUBDIRECTORY( igtlutil )

ADD_EXECUTABLE(igtlMultiThreaderTest1       igtlMultiThreaderTest1.cxx)
ADD_EXECUTABLE(igtlMultiThreaderTest2       igtlMultiThreaderTest2.cxx)
ADD_EXECUTABLE(igtlMultiThreaderTest3       igtlMultiThreaderTest3.cxx)
ADD_EXECUTABLE(igtlMessageFactoryTest       igtlMessageFactoryTest.cxx)
ADD_EXECUTABLE(igtlTimeStampTest1           igtlTimeStampTest1.cxx)
ADD_EXECUTABLE(igtlMessageBaseTest          igtlMessageBaseTest.cxx)
ADD_EXECUTABLE(igtlConditionVariableTest    igtlConditionVariableTest.cxx)

ADD_EXECUTABLE(igtlImageMessageTest         igtlImageMessageTest.cxx)
ADD_EXECUTABLE(igtlImageMessage2Test        igtlImageMessage2Test.cxx)
ADD_EXECUTABLE(igtlTransformMessageTest     igtlTransformMessageTest.cxx)
ADD_EXECUTABLE(igtlPositionMessageTest      igtlPositionMessageTest.cxx)
ADD_EXECUTABLE(igtlStatusMessageTest        igtlStatusMessageTest.cxx)
ADD_EXECUTABLE(igtlCapabilityMessageTest    igtlCapabilityMessageTest.cxx)

# Message Tests Added in Version 2
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "1")
  ADD_EXECUTABLE(igtlBindMessageTest          igtlBindMessageTest.cxx)
  ADD_EXECUTABLE(igtlColorTableMessageTest    igtlColorTableMessageTest.cxx)
  ADD_EXECUTABLE(igtlLabelMetaMessageTest     igtlLabelMetaMessageTest.cxx)
  ADD_EXECUTABLE(igtlNDArrayMessageTest       igtlNDArrayMessageTest.cxx)
  ADD_EXECUTABLE(igtlImageMetaMessageTest     igtlImageMetaMessageTest.cxx)
  ADD_EXECUTABLE(igtlPointMessageTest         igtlPointMessageTest.cxx)
  ADD_EXECUTABLE(igtlPolyDataMessageTest      igtlPolyDataMessageTest.cxx)
  ADD_EXECUTABLE(igtlSensorMessageTest        igtlSensorMessageTest.cxx)
  ADD_EXECUTABLE(igtlStringMessageTest        igtlStringMessageTest.cxx)
  ADD_EXECUTABLE(igtlTrackingDataMessageTest  igtlTrackingDataMessageTest.cxx)
  ADD_EXECUTABLE(igtlTrajectoryMessageTest    igtlTrajectoryMessageTest.cxx)
ENDIF()

# Message Tests Added in Version 3
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2")
  ADD_EXECUTABLE(igtlCommandMessageTest       igtlCommandMessageTest.cxx)
  ADD_EXECUTABLE(igtlMessageRTPWrapperTest    igtlMessageRTPWrapperTest.cxx)
ENDIF()

IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2" AND BUILD_VIDEOSTREAM AND (USE_H264 OR USE_VP9 OR (USE_X265 AND USE_OPENHEVC)))
  ADD_EXECUTABLE(igtlVideoMessageTest         igtlVideoMessageTest.cxx)
  ADD_EXECUTABLE(igtlVideoMetaMessageTest     igtlVideoMetaMessageTest.cxx)
ENDIF()

IF(OpenIGTLink_USE_GTEST)
  SET(GTEST_LINK OpenIGTLink gtest gtest_main gmock_main gmock)
ELSE()
  SET(GTEST_LINK OpenIGTLink)
ENDIF()

function(target_link_with_gtest_dependency target)
	IF(OpenIGTLink_USE_GTEST)
		add_dependencies(${target} GTest GMock)
	ENDIF()
 	TARGET_LINK_LIBRARIES(${target} ${GTEST_LINK})
endfunction()

target_link_with_gtest_dependency(igtlMultiThreaderTest1)
target_link_with_gtest_dependency(igtlMultiThreaderTest2)
target_link_with_gtest_dependency(igtlMultiThreaderTest3)
target_link_with_gtest_dependency(igtlMessageFactoryTest)
target_link_with_gtest_dependency(igtlTimeStampTest1)
target_link_with_gtest_dependency(igtlMessageBaseTest)
target_link_with_gtest_dependency(igtlConditionVariableTest)

target_link_with_gtest_dependency(igtlImageMessageTest      ${GTEST_LINK})
target_link_with_gtest_dependency(igtlImageMessage2Test     ${GTEST_LINK})
target_link_with_gtest_dependency(igtlCapabilityMessageTest ${GTEST_LINK})
target_link_with_gtest_dependency(igtlStatusMessageTest     ${GTEST_LINK})
target_link_with_gtest_dependency(igtlTransformMessageTest  ${GTEST_LINK})
target_link_with_gtest_dependency(igtlPositionMessageTest   ${GTEST_LINK})

# Message Tests Added in Version 2
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "1")
  target_link_with_gtest_dependency(igtlBindMessageTest         ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlColorTableMessageTest   ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlLabelMetaMessageTest    ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlNDArrayMessageTest      ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlImageMetaMessageTest    ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlPointMessageTest        ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlPolyDataMessageTest     ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlSensorMessageTest       ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlStringMessageTest       ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlTrackingDataMessageTest ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlTrajectoryMessageTest   ${GTEST_LINK})
ENDIF()

# Message Tests Added in Version 3
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2")
  target_link_with_gtest_dependency(igtlCommandMessageTest      ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlMessageRTPWrapperTest   ${GTEST_LINK})
ENDIF()

IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2" AND BUILD_VIDEOSTREAM AND (USE_H264 OR USE_VP9 OR (USE_X265 AND USE_OPENHEVC)))
  target_link_with_gtest_dependency(igtlVideoMessageTest        ${GTEST_LINK})
  target_link_with_gtest_dependency(igtlVideoMetaMessageTest    ${GTEST_LINK})
ENDIF()

SET(TestStringFormat1 "--gtest_filter=*.*FormatVersion1")

ADD_TEST(igtlMultiThreaderTest1     ${OpenIGTLink_EXECUTABLE_PATH}/igtlMultiThreaderTest1)
ADD_TEST(igtlMultiThreaderTest2     ${OpenIGTLink_EXECUTABLE_PATH}/igtlMultiThreaderTest2)
ADD_TEST(igtlMultiThreaderTest3     ${OpenIGTLink_EXECUTABLE_PATH}/igtlMultiThreaderTest3)
ADD_TEST(igtlMessageFactoryTest     ${OpenIGTLink_EXECUTABLE_PATH}/igtlMessageFactoryTest)
ADD_TEST(igtlTimeStampTest1         ${OpenIGTLink_EXECUTABLE_PATH}/igtlTimeStampTest1)
ADD_TEST(igtlMessageBaseTest        ${OpenIGTLink_EXECUTABLE_PATH}/igtlMessageBaseTest ${TestStringFormat1})
ADD_TEST(igtlConditionVariableTest  ${OpenIGTLink_EXECUTABLE_PATH}/igtlConditionVariableTest ${TestStringFormat1})

ADD_TEST(igtlImageMessageTest       ${OpenIGTLink_EXECUTABLE_PATH}/igtlImageMessageTest ${TestStringFormat1})
ADD_TEST(igtlImageMessage2Test      ${OpenIGTLink_EXECUTABLE_PATH}/igtlImageMessage2Test ${TestStringFormat1})
ADD_TEST(igtlCapabilityMessageTest  ${OpenIGTLink_EXECUTABLE_PATH}/igtlCapabilityMessageTest ${TestStringFormat1})
ADD_TEST(igtlStatusMessageTest      ${OpenIGTLink_EXECUTABLE_PATH}/igtlStatusMessageTest ${TestStringFormat1})
ADD_TEST(igtlTransformMessageTest   ${OpenIGTLink_EXECUTABLE_PATH}/igtlTransformMessageTest ${TestStringFormat1})
ADD_TEST(igtlPositionMessageTest    ${OpenIGTLink_EXECUTABLE_PATH}/igtlPositionMessageTest ${TestStringFormat1})

# Message Tests Added in Version 2
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "1")
  ADD_TEST(igtlBindMessageTest          ${OpenIGTLink_EXECUTABLE_PATH}/igtlBindMessageTest ${TestStringFormat1})
  ADD_TEST(igtlColorTableMessageTest    ${OpenIGTLink_EXECUTABLE_PATH}/igtlColorTableMessageTest ${TestStringFormat1})
  ADD_TEST(igtlLabelMetaMessageTest     ${OpenIGTLink_EXECUTABLE_PATH}/igtlLabelMetaMessageTest ${TestStringFormat1})
  ADD_TEST(igtlNDArrayMessageTest       ${OpenIGTLink_EXECUTABLE_PATH}/igtlNDArrayMessageTest ${TestStringFormat1})
  ADD_TEST(igtlImageMetaMessageTest     ${OpenIGTLink_EXECUTABLE_PATH}/igtlLabelMetaMessageTest ${TestStringFormat1})
  ADD_TEST(igtlPointMessageTest         ${OpenIGTLink_EXECUTABLE_PATH}/igtlPointMessageTest ${TestStringFormat1})
  ADD_TEST(igtlPolyDataMessageTest      ${OpenIGTLink_EXECUTABLE_PATH}/igtlPolyDataMessageTest ${TestStringFormat1})
  ADD_TEST(igtlSensorMessageTest        ${OpenIGTLink_EXECUTABLE_PATH}/igtlSensorMessageTest ${TestStringFormat1})
  ADD_TEST(igtlStringMessageTest        ${OpenIGTLink_EXECUTABLE_PATH}/igtlStringMessageTest ${TestStringFormat1})
  ADD_TEST(igtlTrackingDataMessageTest  ${OpenIGTLink_EXECUTABLE_PATH}/igtlTrackingDataMessageTest ${TestStringFormat1})
  ADD_TEST(igtlTrajectoryMessageTest    ${OpenIGTLink_EXECUTABLE_PATH}/igtlTrajectoryMessageTest ${TestStringFormat1})
ENDIF()

SET(TestStringFormat2 "--gtest_filter=*.*FormatVersion2")
# Message Tests Added in Version 3
IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2")
  ADD_TEST(igtlMessageBaseTestFormatVersion2          ${OpenIGTLink_EXECUTABLE_PATH}/igtlMessageBaseTest ${TestStringFormat2})
  ADD_TEST(igtlImageMessageTestFormatVersion2         ${OpenIGTLink_EXECUTABLE_PATH}/igtlImageMessageTest ${TestStringFormat2})
  ADD_TEST(igtlImageMessage2TestFormatVersion2        ${OpenIGTLink_EXECUTABLE_PATH}/igtlImageMessage2Test ${TestStringFormat2})
  ADD_TEST(igtlBindMessageTestFormatVersion2          ${OpenIGTLink_EXECUTABLE_PATH}/igtlBindMessageTest ${TestStringFormat2})
  ADD_TEST(igtlCapabilityMessageTestFormatVersion2    ${OpenIGTLink_EXECUTABLE_PATH}/igtlCapabilityMessageTest ${TestStringFormat2})
  ADD_TEST(igtlColorTableMessageTestFormatVersion2    ${OpenIGTLink_EXECUTABLE_PATH}/igtlColorTableMessageTest ${TestStringFormat2})
  ADD_TEST(igtlConditionVariableTestFormatVersion2    ${OpenIGTLink_EXECUTABLE_PATH}/igtlConditionVariableTest ${TestStringFormat2})
  ADD_TEST(igtlLabelMetaMessageTestFormatVersion2     ${OpenIGTLink_EXECUTABLE_PATH}/igtlLabelMetaMessageTest ${TestStringFormat2})
  ADD_TEST(igtlNDArrayMessageTestFormatVersion2       ${OpenIGTLink_EXECUTABLE_PATH}/igtlNDArrayMessageTest ${TestStringFormat2})
  ADD_TEST(igtlImageMetaMessageTestFormatVersion2     ${OpenIGTLink_EXECUTABLE_PATH}/igtlLabelMetaMessageTest ${TestStringFormat2})
  ADD_TEST(igtlPointMessageTestFormatVersion2         ${OpenIGTLink_EXECUTABLE_PATH}/igtlPointMessageTest ${TestStringFormat2})
  ADD_TEST(igtlPolyDataMessageTestFormatVersion2      ${OpenIGTLink_EXECUTABLE_PATH}/igtlPolyDataMessageTest ${TestStringFormat2})
  ADD_TEST(igtlSensorMessageTestFormatVersion2        ${OpenIGTLink_EXECUTABLE_PATH}/igtlSensorMessageTest ${TestStringFormat2})
  ADD_TEST(igtlStatusMessageTestFormatVersion2        ${OpenIGTLink_EXECUTABLE_PATH}/igtlStatusMessageTest ${TestStringFormat2})
  ADD_TEST(igtlStringMessageTestFormatVersion2        ${OpenIGTLink_EXECUTABLE_PATH}/igtlStringMessageTest ${TestStringFormat2})
  ADD_TEST(igtlTrackingDataMessageTestFormatVersion2  ${OpenIGTLink_EXECUTABLE_PATH}/igtlTrackingDataMessageTest ${TestStringFormat2})
  ADD_TEST(igtlTrajectoryMessageTestFormatVersion2    ${OpenIGTLink_EXECUTABLE_PATH}/igtlTrajectoryMessageTest ${TestStringFormat2})
  ADD_TEST(igtlTransformMessageTestFormatVersion2     ${OpenIGTLink_EXECUTABLE_PATH}/igtlTransformMessageTest ${TestStringFormat2})
  ADD_TEST(igtlPositionMessageTest                    ${OpenIGTLink_EXECUTABLE_PATH}/igtlPositionMessageTest)
  ## Command message is available in Protocol version 3, however, we will test both header version 1 and 2
  ADD_TEST(igtlCommandMessageTestFormatVersion1       ${OpenIGTLink_EXECUTABLE_PATH}/igtlCommandMessageTest ${TestStringFormat1})
  ADD_TEST(igtlCommandMessageTestFormatVersion2       ${OpenIGTLink_EXECUTABLE_PATH}/igtlCommandMessageTest ${TestStringFormat2})
  ADD_TEST(igtlMessageRTPWrapperTestFormatVersion2    ${OpenIGTLink_EXECUTABLE_PATH}/igtlMessageRTPWrapperTest ${TestStringFormat2})
ENDIF()

IF(${OpenIGTLink_PROTOCOL_VERSION} GREATER "2" AND BUILD_VIDEOSTREAM AND (USE_H264 OR USE_VP9 OR (USE_X265 AND USE_OPENHEVC)))
  ADD_TEST(igtlVideoMessageTestFormatVersion1         ${OpenIGTLink_EXECUTABLE_PATH}/igtlVideoMessageTest ${TestStringFormat1})
  ADD_TEST(igtlVideoMessageTestFormatVersion2         ${OpenIGTLink_EXECUTABLE_PATH}/igtlVideoMessageTest ${TestStringFormat2})
  ADD_TEST(igtlVideoMetaMessageTestFormatVersion2     ${OpenIGTLink_EXECUTABLE_PATH}/igtlVideoMetaMessageTest ${TestStringFormat2})
ENDIF()